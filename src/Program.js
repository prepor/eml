// Generated by BUCKLESCRIPT VERSION 1.2.1 , PLEASE EDIT WITH CARE
'use strict';

var Html           = require("./html");
var Task           = require("./task");
var Block          = require("bs-platform/lib/js/block");
var Curry          = require("bs-platform/lib/js/curry");
var Printf         = require("bs-platform/lib/js/printf");
var Diff           = require("virtual-dom/diff");
var Create_element = require("virtual-dom/create-element");
var Patch          = require("virtual-dom/patch");
var Channel        = require("./channel");

function updater_loop(init, vdom, view, update, root, clb, ch) {
  var model = [init];
  var vdom$1 = [vdom];
  var tick = function () {
    return Task.$great$great$eq(Channel.read(ch), function (msg) {
                var model$prime = Curry._2(update, model[0], msg);
                var vdom$prime = Html.draw(Curry._1(view, model$prime), clb);
                var diff = Diff(vdom$1[0], vdom$prime);
                model[0] = model$prime;
                vdom$1[0] = vdom$prime;
                Patch(root, diff);
                return tick(/* () */0);
              });
  };
  return tick(/* () */0);
}

function simple(dom_id, init, view, update) {
  var ch = Channel.create(/* () */0);
  var clb = function (msg) {
    return Channel.write(ch, msg);
  };
  var vdom = Html.draw(Curry._1(view, init), clb);
  var root = Create_element(vdom);
  updater_loop(init, vdom, view, update, root, clb, ch);
  var match = document.getElementById(dom_id);
  if (match !== null) {
    return match.appendChild(root);
  }
  else {
    console.log(Curry._1(Printf.sprintf(/* Format */[
                  /* String_literal */Block.__(11, [
                      "Can't find node with id ",
                      /* String */Block.__(2, [
                          /* No_padding */0,
                          /* End_of_format */0
                        ])
                    ]),
                  "Can't find node with id %s"
                ]), dom_id));
    return /* () */0;
  }
}

exports.updater_loop = updater_loop;
exports.simple       = simple;
/* Html Not a pure module */
